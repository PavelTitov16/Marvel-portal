{"version":3,"file":"static/js/489.431f6efb.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorMessage/ErrorMessage.js","components/comicsList/ComicsList.js","pages/ComicsPage.js","hooks/http.hook.js","services/MarvelService.js"],"sourcesContent":["import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;\r\n","import {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './comicsList.scss';\r\n\r\nconst setContent = (process, Component, newItemLoading) => {\r\n    switch (process) {\r\n        case 'waiting':\r\n            return <Spinner/>;\r\n        case 'loading':\r\n            return newItemLoading ? <Component/> : <Spinner/>;\r\n        case 'confirmed':\r\n            return <Component/>;\r\n        case 'error':\r\n            return <ErrorMessage/>;\r\n        default:\r\n            throw new Error('Unexpected process state');\r\n    }\r\n}\r\n\r\nconst ComicsList = () => {\r\n\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n    const [comicsEnded, setComicsEnded] = useState(false);\r\n\r\n    const {loading, error, getAllComics, process, setProcess} = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        onRequest(offset, true);\r\n    }, [])\r\n\r\n    const onRequest = (offset, initial) => {\r\n        initial ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(onComicsListLoaded)\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    const onComicsListLoaded = (newComicsList) => {\r\n        let ended = false;\r\n        if (newComicsList.length < 8) {\r\n            ended = true;\r\n        }\r\n        setComicsList([...comicsList, ...newComicsList]);\r\n        setnewItemLoading(false);\r\n        setOffset(offset + 8);\r\n        setComicsEnded(ended);\r\n    }\r\n\r\n    function renderItems (arr) {\r\n        const items = arr.map((item, i) => {\r\n            return (\r\n                <li className=\"comics__item\" key={i}>\r\n                    <Link to={`/comics/${item.id}`}>\r\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\r\n                        <div className=\"comics__item-name\">{item.title}</div>\r\n                        <div className=\"comics__item-price\">{item.price}</div>\r\n                    </Link>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {setContent(process, () => renderItems(comicsList), newItemLoading)}\r\n            <button \r\n                disabled={newItemLoading} \r\n                style={{'display' : comicsEnded ? 'none' : 'block'}}\r\n                className=\"button button__main button__long\"\r\n                onClick={() => onRequest(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;\r\n","import { Helmet } from \"react-helmet\";\r\n\r\nimport AppBanner from \"../components/appBanner/AppBanner\";\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n        <Helmet>\r\n            <meta\r\n                name=\"description\"\r\n                content=\"Page with list of our comics\"\r\n            />\r\n            <title>Comics page</title>\r\n        </Helmet>\r\n        <AppBanner/>\r\n        <ComicsList/>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [process, setProcess] = useState('waiting');\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'} ) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            return data;\r\n        } catch(e) {\r\n            setProcess('error');\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {request, clearError, process, setProcess}\r\n}","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {request, clearError, process, setProcess} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=48fbea85f489db68eb5c80c37f69523d';\r\n    const _baseOffset = 220;\r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n\tconst getCharacterByName = async (name) => {\r\n        const res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\r\n        return res.data.results.map(_transformCharacter);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n\t\tconst res = await request(\r\n\t\t\t`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`\r\n\t\t);\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t};\r\n\r\n\tconst getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComics(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail:char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComics = (comics) => {\r\n\t\treturn {\r\n\t\t\tid: comics.id,\r\n\t\t\ttitle: comics.title,\r\n\t\t\tdescription: comics.description || \"There is no description\",\r\n\t\t\tpageCount: comics.pageCount\r\n\t\t\t\t? `${comics.pageCount} p.`\r\n\t\t\t\t: \"No information about the number of pages\",\r\n\t\t\tthumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n\t\t\tlanguage: comics.textObjects[0]?.language || \"en-us\",\r\n\t\t\t// optional chaining operator\r\n\t\t\tprice: comics.prices[0].price\r\n\t\t\t\t? `${comics.prices[0].price}$`\r\n\t\t\t\t: \"not available\",\r\n\t\t};\r\n\t};\r\n\r\n    return {\r\n\t\tclearError,\r\n\t\tgetAllCharacters,\r\n\t\tgetCharacter,\r\n\t\tgetAllComics,\r\n\t\tgetComic,\r\n\t\tgetCharacterByName,\r\n\t\tprocess,\r\n\t\tsetProcess\r\n\t};\r\n}\r\n\r\nexport default useMarvelService;\r\n"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","ErrorMessage","style","display","width","height","objectFit","margin","img","setContent","process","Component","newItemLoading","Spinner","Error","ComicsList","comicsList","setComicsList","useState","setnewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","loading","error","getAllComics","setProcess","useMarvelService","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","arr","items","map","item","i","Link","to","concat","id","thumbnail","title","price","renderItems","disabled","onClick","ComicsPage","_Fragment","Helmet","name","content","request","clearError","useHttp","useCallback","async","url","method","arguments","undefined","body","headers","response","fetch","ok","status","json","e","_apiBase","_apiKey","_transformCharacter","char","description","slice","path","extension","homepage","urls","wiki","comics","_transformComics","_comics$textObjects$","pageCount","language","textObjects","prices","getAllCharacters","data","results","getCharacter","res","getComic","getCharacterByName"],"sourceRoot":""}